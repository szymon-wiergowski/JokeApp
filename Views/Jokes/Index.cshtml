@model IEnumerable<DotNetApp.Models.Joke>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
@if (@ViewBag.TotalJokes == 0)
{
    <p class="text-danger">No jokes in database</p>
} 
else if (@ViewBag.totalfilteredJokes == 0)
{
<p class="text-danger">No joke with <strong>@ViewBag.searchPhrase</strong> in database</p>
}
else
{
<table class="table">
    <thead>
        <tr>
            <th>
                <a class="mr-2" asp-controller="Jokes" asp-action="Sort"><i class="far fa-circle text-black-50"></i></a>@Html.DisplayNameFor(model => model.JokeQuestion)
            </th>
            <th>
                <span class="mr-2"><i class="far fa-circle"></i></span>@Html.DisplayNameFor(model => model.JokeAnswer)
            </th>
            <th>
                <span class="mr-2"><i class="far fa-circle"></i></span>@Html.DisplayNameFor(model => model.JokeAuthor)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.JokeQuestion)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.JokeAnswer)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.JokeAuthor)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
}
